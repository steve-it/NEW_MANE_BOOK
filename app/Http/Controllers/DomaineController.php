<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  1.8.8   |
    |              on 2018-02-16 09:48:53              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace App\Http\Controllers; use App\Domaine; use Illuminate\Http\Request; use Illuminate\Http\Response; use Illuminate\Http\Exceptions; use Illuminate\Http\JsonResponse; use Illuminate\Support\Facades\DB; use App\Http\Requests\DomaineResquest; class DomaineController extends Controller { public function index() { $domaines = Domaine::all(); return view("\144\157\x6d\141\x69\x6e\x65\x73\x2e\154\x69\x73\164", compact("\x64\x6f\x6d\141\x69\x6e\x65\x73")); } public function NewDomaines(DomaineResquest $request) { goto VIYqq; TSEWS: f4TZI: goto zTg2d; MxgcL: $domaines = Domaine::create($request->all()); goto BNMMZ; VIYqq: if (!$request->ajax()) { goto f4TZI; } goto MxgcL; BNMMZ: return Response()->json($domaines); goto TSEWS; zTg2d: } public function create(Request $request) { goto c0tIa; Rwl8B: syybL: goto SiH57; BVxdj: $domaines = Domaine::create($request->all()); goto f0I6O; f0I6O: return response()->json($domaines); goto Rwl8B; c0tIa: if (!$request->ajax()) { goto syybL; } goto BVxdj; SiH57: } public function store() { } public function show(Request $request) { goto dMIIE; dMIIE: if (!$request->ajax()) { goto stSml; } goto C_fS6; mcAJq: stSml: goto nry37; AT35q: return Response($domaines); goto mcAJq; C_fS6: $domaines = Domaine::find($request->id); goto AT35q; nry37: } public function edit($id) { } public function UpdateDomaines(Request $request) { goto lAw8c; A9_0x: return Response($domaines); goto jy5kA; oAd9P: $domaines = Domaine::find($request->id); goto RCfV9; FwUlF: $domaines->save(); goto A9_0x; jy5kA: zL77e: goto CBKb6; RCfV9: $domaines->NomDomaines = $request->NomDomaines; goto FwUlF; lAw8c: if (!$request->ajax()) { goto zL77e; } goto oAd9P; CBKb6: } public function destroy($id) { } public function delete(Request $request) { Domaine::destroy($request->id); } } ?>
